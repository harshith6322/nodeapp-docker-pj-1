services:
  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      MONGODBPASS: 123456
      MONGODBUSER: mongo
    ports:
      - 27017:27017
    networks:
      - net-1
    volumes:
      - vol-1:/data/db
  nodeapp:
    container_name: nodeapp
    depends_on:
      - mongodb
    build:
      context: .
    ports:
      - 3000:3000
    networks:
      - net-1
    volumes:
      - vol-1:/data/db
      - C:\Users\rrche\Desktop\docker-temp:/apps
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 60s
    restart: always
  nodeapp2:
    container_name: nodeapp2
    depends_on:
      - mongodb
    build:
      context: .
    ports:
      - 3001:3000
    networks:
      - net-1
    volumes:
      - vol-1:/data/db
      # - C:\Users\rrche\Desktop\docker-temp:/apps
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 60s
    restart: always
  nodeapp3:
    container_name: nodeapp3
    depends_on:
      - mongodb
    build:
      context: .
    ports:
      - 3002:3000
    networks:
      - net-1
    volumes:
      - vol-1:/data/db
      # - C:\Users\rrche\Desktop\docker-temp:/apps
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 60s
    restart: always
  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    networks:
      - net-1
    ports:
      - "80:80"
    volumes:
      - C:\Users\rrche\Desktop\docker-temp\nginx\load-balancer.conf:/etc/nginx/conf.d/default.conf

volumes:
  vol-1:

networks:
  net-1:
